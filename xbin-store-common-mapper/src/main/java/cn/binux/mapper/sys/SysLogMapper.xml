<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.binux.mapper.sys.SysLogMapper" >
  <resultMap id="BaseResultMap" type="cn.binux.pojo.sys.SysLog" >
    <id column="log_id" property="logId" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="req_method" property="reqMethod" jdbcType="VARCHAR" />
    <result column="exec_method" property="execMethod" jdbcType="VARCHAR" />
    <result column="exec_time" property="execTime" jdbcType="BIGINT" />
    <result column="exec_desc" property="execDesc" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.binux.pojo.sys.SysLogWithBLOBs" extends="BaseResultMap" >
    <result column="req_url" property="reqUrl" jdbcType="LONGVARCHAR" />
    <result column="args" property="args" jdbcType="LONGVARCHAR" />
    <result column="return_val" property="returnVal" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    log_id, username, ip, req_method, exec_method, exec_time, exec_desc, status, create_time
  </sql>
  <sql id="Blob_Column_List" >
    req_url, args, return_val
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.binux.pojo.sys.SysLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.binux.pojo.sys.SysLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_log
    where log_id = #{logId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_log
    where log_id = #{logId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.binux.pojo.sys.SysLogExample" >
    delete from sys_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.binux.pojo.sys.SysLogWithBLOBs" >
    insert into sys_log (log_id, username, ip, 
      req_method, exec_method, exec_time, 
      exec_desc, status, create_time, 
      req_url, args, return_val
      )
    values (#{logId,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{reqMethod,jdbcType=VARCHAR}, #{execMethod,jdbcType=VARCHAR}, #{execTime,jdbcType=BIGINT}, 
      #{execDesc,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{reqUrl,jdbcType=LONGVARCHAR}, #{args,jdbcType=LONGVARCHAR}, #{returnVal,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.binux.pojo.sys.SysLogWithBLOBs" >
    insert into sys_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        log_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="reqMethod != null" >
        req_method,
      </if>
      <if test="execMethod != null" >
        exec_method,
      </if>
      <if test="execTime != null" >
        exec_time,
      </if>
      <if test="execDesc != null" >
        exec_desc,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="reqUrl != null" >
        req_url,
      </if>
      <if test="args != null" >
        args,
      </if>
      <if test="returnVal != null" >
        return_val,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="reqMethod != null" >
        #{reqMethod,jdbcType=VARCHAR},
      </if>
      <if test="execMethod != null" >
        #{execMethod,jdbcType=VARCHAR},
      </if>
      <if test="execTime != null" >
        #{execTime,jdbcType=BIGINT},
      </if>
      <if test="execDesc != null" >
        #{execDesc,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqUrl != null" >
        #{reqUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="args != null" >
        #{args,jdbcType=LONGVARCHAR},
      </if>
      <if test="returnVal != null" >
        #{returnVal,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.binux.pojo.sys.SysLogExample" resultType="java.lang.Integer" >
    select count(*) from sys_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_log
    <set >
      <if test="record.logId != null" >
        log_id = #{record.logId,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.reqMethod != null" >
        req_method = #{record.reqMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.execMethod != null" >
        exec_method = #{record.execMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.execTime != null" >
        exec_time = #{record.execTime,jdbcType=BIGINT},
      </if>
      <if test="record.execDesc != null" >
        exec_desc = #{record.execDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reqUrl != null" >
        req_url = #{record.reqUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.args != null" >
        args = #{record.args,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.returnVal != null" >
        return_val = #{record.returnVal,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update sys_log
    set log_id = #{record.logId,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      req_method = #{record.reqMethod,jdbcType=VARCHAR},
      exec_method = #{record.execMethod,jdbcType=VARCHAR},
      exec_time = #{record.execTime,jdbcType=BIGINT},
      exec_desc = #{record.execDesc,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      req_url = #{record.reqUrl,jdbcType=LONGVARCHAR},
      args = #{record.args,jdbcType=LONGVARCHAR},
      return_val = #{record.returnVal,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_log
    set log_id = #{record.logId,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      req_method = #{record.reqMethod,jdbcType=VARCHAR},
      exec_method = #{record.execMethod,jdbcType=VARCHAR},
      exec_time = #{record.execTime,jdbcType=BIGINT},
      exec_desc = #{record.execDesc,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.binux.pojo.sys.SysLogWithBLOBs" >
    update sys_log
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="reqMethod != null" >
        req_method = #{reqMethod,jdbcType=VARCHAR},
      </if>
      <if test="execMethod != null" >
        exec_method = #{execMethod,jdbcType=VARCHAR},
      </if>
      <if test="execTime != null" >
        exec_time = #{execTime,jdbcType=BIGINT},
      </if>
      <if test="execDesc != null" >
        exec_desc = #{execDesc,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqUrl != null" >
        req_url = #{reqUrl,jdbcType=LONGVARCHAR},
      </if>
      <if test="args != null" >
        args = #{args,jdbcType=LONGVARCHAR},
      </if>
      <if test="returnVal != null" >
        return_val = #{returnVal,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.binux.pojo.sys.SysLogWithBLOBs" >
    update sys_log
    set username = #{username,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      req_method = #{reqMethod,jdbcType=VARCHAR},
      exec_method = #{execMethod,jdbcType=VARCHAR},
      exec_time = #{execTime,jdbcType=BIGINT},
      exec_desc = #{execDesc,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      req_url = #{reqUrl,jdbcType=LONGVARCHAR},
      args = #{args,jdbcType=LONGVARCHAR},
      return_val = #{returnVal,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.binux.pojo.sys.SysLog" >
    update sys_log
    set username = #{username,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      req_method = #{reqMethod,jdbcType=VARCHAR},
      exec_method = #{execMethod,jdbcType=VARCHAR},
      exec_time = #{execTime,jdbcType=BIGINT},
      exec_desc = #{execDesc,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where log_id = #{logId,jdbcType=BIGINT}
  </update>
</mapper>